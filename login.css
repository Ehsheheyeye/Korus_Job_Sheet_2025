document.addEventListener('DOMContentLoaded', () => {
    // --- Firebase Configuration ---
    const firebaseConfig = {
        apiKey: "AIzaSyAlaRNwoERMLqCGvcSrAB9IHRK7GncKD4s",
        authDomain: "korus-job-dashboard.firebaseapp.com",
        projectId: "korus-job-dashboard",
        storageBucket: "korus-job-dashboard.firebasestorage.app",
        messagingSenderId: "433518743960",
        appId: "1:433518743960:web:f33bf1af978b14e9f85bed"
    };

    // --- Initialize Firebase ---
    firebase.initializeApp(firebaseConfig);
    const auth = firebase.auth();
    const db = firebase.firestore(); // Initialize Firestore here too

    const loginForm = document.getElementById('login-form');
    const userInput = document.getElementById('user-id');
    const passwordInput = document.getElementById('password');
    const errorMessage = document.getElementById('error-message');

    // --- SUPER ADMIN CONFIGURATION ---
    const SUPER_ADMIN_EMAIL = "koruskiran@gmail.com"; // Your correct admin email

    // Redirect if already logged in
    auth.onAuthStateChanged(user => {
        if (user) {
            if (user.email === SUPER_ADMIN_EMAIL) {
                window.location.href = 'admin.html';
            } else {
                window.location.href = 'index.html';
            }
        }
    });

    loginForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const userIdValue = userInput.value.trim();
        const password = passwordInput.value;
        errorMessage.textContent = '';

        let emailToLogin;
        if (userIdValue.toLowerCase() === SUPER_ADMIN_EMAIL.toLowerCase()) {
            emailToLogin = userIdValue;
        } else if (!isNaN(userIdValue) && userIdValue.length > 5) {
            emailToLogin = `${userIdValue}@korus.local`;
        } else {
            errorMessage.textContent = 'Please enter a valid Phone No. or Admin Email.';
            return;
        }

        try {
            await auth.setPersistence(firebase.auth.Auth.Persistence.LOCAL);
            const userCredential = await auth.signInWithEmailAndPassword(emailToLogin, password);
            
            // If it's a regular user, perform the second check
            if (userCredential.user.email !== SUPER_ADMIN_EMAIL) {
                const userQuery = await db.collection('users').where('uid', '==', userCredential.user.uid).limit(1).get();
                
                if (userQuery.empty) {
                    throw new Error("User not found in database.");
                }

                const userData = userQuery.docs[0].data();
                if (userData.status === 'inactive') {
                    // If user is inactive, sign them out and show error
                    await auth.signOut();
                    errorMessage.textContent = 'Your account has been disabled by an admin.';
                    return;
                }
            }
            
            // If checks pass, the onAuthStateChanged listener will handle the redirect.

        } catch (error) {
            console.error("Login Error:", error);
            errorMessage.textContent = 'Invalid credentials or account disabled.';
        }
    });
});
